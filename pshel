# Program 1 - Directory Check

Import-Module powershell-yaml
$config = Get-Content -Path "config.yml" | ConvertFrom-Yaml

$globalThresholdMet = $false
$emailBody = ""

# Checks the number of files in a directory against specified thresholds
function Check-FileCount {
    param (
        [string]$path,
        [array]$countThresholds,
        [string]$fileFilter
    )

    $fileCount = (Get-ChildItem -Path $path -File -Filter $fileFilter).Count
    $breachedThresholds = @()

    foreach ($threshold in $countThresholds) {
        if ($fileCount -ge $threshold.count) {
            $breachedThresholds += $threshold
            CheckSeverityThresholds -severity $threshold.severity -path $path -details "File count: $fileCount"
        }
    }

    return $fileCount
}

# Checks the age of files in a directory against specified time thresholds
function Check-FileAge {
    param (
        [string]$path,
        [array]$timeThresholds,
        [string]$fileFilter
    )

    $files = Get-ChildItem -Path $path -File -Filter $fileFilter

    foreach ($file in $files) {
        $fileAge = (Get-Date) - $file.LastWriteTime
        $ageInMinutes = $fileAge.TotalMinutes

        foreach ($threshold in $timeThresholds) {
            if ($ageInMinutes -ge $threshold.minutes) {
                CheckSeverityThresholds -severity $threshold.severity -path $path -details "File age: $($ageInMinutes.ToString('F2')) minutes for $($file.Name)"
            }
        }
    }
}

# Checks for zero-size files in a directory
function Check-ZeroSizeFiles {
    param (
        [string]$path,
        [int]$zeroSizeSeverity,
        [string]$fileFilter
    )

    $zeroSizeFiles = Get-ChildItem -Path $path -File -Filter $fileFilter | Where-Object { $_.Length -eq 0 }

    if ($zeroSizeFiles.Count -gt 0) {
        CheckSeverityThresholds -severity $zeroSizeSeverity -path $path -details "Zero-size files: $($zeroSizeFiles.Count)"
    }

    return $zeroSizeFiles.Count
}

# Checks severity thresholds and updates global variables
function CheckSeverityThresholds {
    param (
        [int]$severity,
        [string]$path,
        [string]$details
    )

    if ($severity -ge 3) {
        $script:globalThresholdMet = $true
        $script:emailBody += "Severity 3 or higher met in $path - $details`n"
    }
    if ($severity -ge 2) {
        Write-Output "Major error: Severity 2 or higher met in $path - $details"
    }
}

# Performs comprehensive checks on a directory
function Check-Directory {
    param (
        [string]$path,
        [array]$timeThresholds,
        [array]$countThresholds,
        [bool]$checkZeroSize,
        [int]$zeroSizeSeverity,
        [string]$fileFilter
    )

    $fileCount = Check-FileCount -path $path -countThresholds $countThresholds -fileFilter $fileFilter
    Check-FileAge -path $path -timeThresholds $timeThresholds -fileFilter $fileFilter
    if ($checkZeroSize) {
        Check-ZeroSizeFiles -path $path -zeroSizeSeverity $zeroSizeSeverity -fileFilter $fileFilter
    }
}

# Main execution loop
foreach ($dir in $config.directory_check) {
    Check-Directory -path $dir.path `
                    -timeThresholds $dir.time_thresholds `
                    -countThresholds $dir.count_thresholds `
                    -checkZeroSize $dir.check_zero_size `
                    -zeroSizeSeverity $dir.zero_size_severity `
                    -fileFilter $dir.file_filter
}

# Check if the global threshold was met and provide summary
if ($globalThresholdMet) {
    Write-Output "Checks completed. Thresholds met. Email body:`n$emailBody"
} else {
    Write-Output "Checks completed. All thresholds are within acceptable limits."
}
